<!-- Build file for the Phonebook Example plugin PDE unit test fragment -->
<project basedir="."
         default="help"
         name="phonebookexampletest">
	<property name="target.eclipse.version"   value="indigo"/>
  <property location="${basedir}"
            name="plugin.dir" />
  <property location="${basedir}/.."
            name="projects.dir" />
  <property file="${projects.dir}/project.properties" />
  <property name="plugin.name"
            value="PhoneBookExample-test" />
  <property name="plugin.version"
            value="1.0.0" />
  <property location="${projects.dir}/eclipse-${target.eclipse.version}/eclipse"
            name="test.eclipse.dir" />
  <property location="${projects.dir}/target"
            name="target.dir" />
  <property location="${target.dir}/plugins"
            name="published.plugins.dir" />
  <property location="${plugin.dir}/src"
            name="src.dir" />
  <property location="${plugin.dir}/test"
            name="test.dir" />
  <property location="${plugin.dir}/target"
            name="plugin.target.dir" />
  <property location="${plugin.target.dir}/reports"
            name="reports.dir" />
  <property location="${plugin.target.dir}/classes"
            name="classes.dir" />
  <property location="${reports.dir}/test"
            name="test.reports.dir" />
  <path id="build.class.path">
    <pathelement location="${published.plugins.dir}/PhoneBookExample_${plugin.version}.jar" />
    <fileset dir="${test.eclipse.dir}/plugins">
      <include name="org.eclipse.core.runtime_*.jar" />
      <include name="org.eclipse.equinox.common_*.jar" />
      <include name="org.eclipse.ui.workbench_*.jar" />
      <include name="org.eclipse.jface_*.jar" />
      <include name="org.eclipse.swt_*.jar" />
      <include name="org.eclipse.swt.gtk.linux.x86_64_*.jar" />
      <include name="org.junit_3.*/**/junit.jar" />
    </fileset>
  </path>
  <path id="pde.test.listener.class.path">
    <path refid="build.class.path" />
    <pathelement location="${published.plugins.dir}/pde.test.utils_${pde.test.utils.version}.jar" />
    <fileset dir="${test.eclipse.dir}/plugins">
      <include name="org.apache.ant_*/**/ant.jar" />
      <include name="org.apache.ant_*/**/ant-junit.jar" />
      <include name="org.eclipse.jdt.junit_*.jar" />
      <include name="org.eclipse.debug.core_*.jar" />
      <include name="org.eclipse.osgi_*.jar" />
      <include name="org.eclipse.core.resources_*.jar" />
      <include name="org.eclipse.swt_*.jar" />
      <include name="org.eclipse.equinox.preferences_*.jar" />
    </fileset>
  </path>
  <path id="pde.test.port.locator.class.path">
    <pathelement location="${published.plugins.dir}/pde.test.utils_${pde.test.utils.version}.jar" />
    <fileset dir="${test.eclipse.dir}/plugins">
      <include name="org.junit_3.*/**/junit.jar" />
    </fileset>
  </path>
  <path id="equinox.launcher.class.path">
    <fileset dir="${test.eclipse.dir}/plugins">
      <include name="org.eclipse.equinox.launcher_*.jar" />
    </fileset>
  </path>
  <target name="build">
    <mkdir dir="${classes.dir}" />
    <javac classpathref="build.class.path"
           debug="${debug}"
           deprecation="${deprecation}"
           destdir="${classes.dir}"
           includeantruntime="false"
           srcdir="${test.dir}" />
    <antcall target="create_eclipse_plugin" />
    <copy file="${plugin.target.dir}/${plugin.name}_${plugin.version}.jar"
          overwrite="true"
          todir="${published.plugins.dir}" />
  </target>
  <target name="create_eclipse_plugin">
    <property file="${plugin.dir}/build.properties" />
    <!-- Load bin.includes property from plugin's eclipse build.properties file -->
    <delete file="${plugin.target.dir}/${plugin.name}_${plugin.version}.jar" />
    <zip destfile="${plugin.target.dir}/${plugin.name}_${plugin.version}.jar">

      <zipfileset dir="."
                  includes="${bin.includes}" />
      <zipfileset dir="${classes.dir}" />
    </zip>
  </target>
  <target depends="build, pde_test, generate_report, check_results"
          name="test" />
  <target name="pde_test">
    <delete>
      <!-- fileset dir="${test.eclipse.dir}/configuration" includes="**/*" excludes="config.ini"/ -->
      <fileset dir="${test.eclipse.dir}/plugins"
               includes="PhoneBookExample*.jar" />
      <fileset dir="${test.eclipse.dir}/plugins"
               includes="pde.test.utils*.jar" />
    </delete>
    <!-- Load plugin and pde tests plugin fragment into test eclipse installation -->
    <copy overwrite="true"
          todir="${test.eclipse.dir}/plugins">
      <fileset dir="${published.plugins.dir}" />
    </copy>
    <delete file="pde_test_port.properties" />
    <!-- properties file generated by PDETestPortLocator class in pde.test.utils -->
    <java classname="pde.test.utils.PDETestPortLocator"
          classpathref="pde.test.port.locator.class.path"
          fork="yes" />
    <waitfor checkevery="100"
             checkeveryunit="millisecond"
             maxwait="10"
             maxwaitunit="second">
      <available file="pde_test_port.properties" />
    </waitfor>
    <property file="pde_test_port.properties" />
    <echo message="Using port ${pde.test.port} for listening to PDE Test run" />
    <parallel>
      <daemons>
        <antcall target="run_pde_test_listener" />
      </daemons>
      <sequential>
        <sleep seconds="5" />
        <!-- Give the listener a few seconds to start up -->
        <antcall target="run_pde_tests" />
      </sequential>
    </parallel>
    <delete>
      <fileset dir="${test.eclipse.dir}/plugins"
               includes="PhoneBookExample*.jar" />
      <fileset dir="${test.eclipse.dir}/plugins"
               includes="pde.test.utils*.jar" />
    </delete>
    <mkdir dir="${test.reports.dir}" />
    <move todir="${test.reports.dir}">
      <fileset dir=".">
        <include name="**/TEST-*.xml" />
      </fileset>
    </move>
  </target>
  <target name="run_pde_test_listener">
    <java classname="pde.test.utils.PDETestResultsCollector"
          classpathref="pde.test.listener.class.path"
          fork="yes">
      <arg line="${plugin.name} ${pde.test.port}" />
    </java>
  </target>
  <target name="run_pde_tests">
    <property name="test.classes.list"
              value="phonebookexample.dialogs.PhoneBookEntryEditorDialogTest" />
    <mkdir dir="${test.reports.dir}/output/ws" />
    <java classname="org.eclipse.equinox.launcher.Main"
          classpathref="equinox.launcher.class.path"
          dir="${plugin.dir}"
          fork="yes">
      <arg line="-application org.eclipse.pde.junit.runtime.uitestapplication -data ${test.reports.dir}/output/ws -dev bin -clean -port ${pde.test.port} -testpluginname PhoneBookExample -classnames ${test.classes.list}" />
    </java>
  </target>
  <target name="generate_report">
    <junitreport todir="${test.reports.dir}">
      <fileset dir="${test.reports.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report todir="${test.reports.dir}" />
    </junitreport>
  </target>
  <target name="check_results">
    <loadfile property="full.results.summary"
              srcfile="${test.reports.dir}/overview-summary.html" />
    <!-- works if you load 2 times ?? -->
    <loadfile property="results.summary"
              srcfile="${test.reports.dir}/overview-summary.html">
      <filterchain>
        <headfilter lines="30" />
        <linecontains>
          <contains value="%&lt;/td&gt;" />
        </linecontains>
      </filterchain>
    </loadfile>
    <condition property="tests.passed">
      <contains string="${results.summary}"
                substring="100.00%" />
    </condition>
    <fail message="FAILED - some tests failed - see ${test.reports.dir}/index.html for more details"
          unless="tests.passed" />
    <echo message="SUCCESS - all tests passed - see ${test.reports.dir}/index.html for more details" />
  </target>
  <target name="clean">
    <delete file="pde_test_port.properties" />
    <delete dir="${plugin.dir}/bin" />
    <delete dir="${plugin.target.dir}" />
  </target>
  <target name="help">
    <echo>This is the ant build file for the Phonebook Example PDE
    Tests. Usage: Target Description ==============
    ============================================== [default]
    Displays this message. build Builds the source and creates the
    plugin jar. clean Cleans all the build and generated artefacts.
    test Builds and runs the PDE JUnit tests and generates a
    report.</echo>
  </target>
</project>
